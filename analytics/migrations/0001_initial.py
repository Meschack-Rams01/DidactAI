# Generated by Django 4.2.24 on 2025-09-23 16:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True, verbose_name='Date')),
                ('total_users', models.PositiveIntegerField(default=0, verbose_name='Total Users')),
                ('active_users', models.PositiveIntegerField(default=0, verbose_name='Active Users')),
                ('new_users', models.PositiveIntegerField(default=0, verbose_name='New Users')),
                ('total_courses', models.PositiveIntegerField(default=0, verbose_name='Total Courses')),
                ('active_courses', models.PositiveIntegerField(default=0, verbose_name='Active Courses')),
                ('new_courses', models.PositiveIntegerField(default=0, verbose_name='New Courses')),
                ('total_files', models.PositiveIntegerField(default=0, verbose_name='Total Files')),
                ('total_file_size', models.BigIntegerField(default=0, verbose_name='Total File Size (bytes)')),
                ('files_uploaded_today', models.PositiveIntegerField(default=0, verbose_name='Files Uploaded Today')),
                ('total_generations', models.PositiveIntegerField(default=0, verbose_name='Total Generations')),
                ('generations_today', models.PositiveIntegerField(default=0, verbose_name='Generations Today')),
                ('total_tokens_used', models.BigIntegerField(default=0, verbose_name='Total Tokens Used')),
                ('total_exports', models.PositiveIntegerField(default=0, verbose_name='Total Exports')),
                ('exports_today', models.PositiveIntegerField(default=0, verbose_name='Exports Today')),
                ('total_downloads', models.PositiveIntegerField(default=0, verbose_name='Total Downloads')),
                ('avg_response_time', models.FloatField(default=0.0, verbose_name='Average Response Time (ms)')),
                ('error_rate', models.FloatField(default=0.0, verbose_name='Error Rate (%)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'System Metrics',
                'verbose_name_plural': 'System Metrics',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='UserActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('login', 'Login'), ('logout', 'Logout'), ('course_created', 'Course Created'), ('course_updated', 'Course Updated'), ('file_uploaded', 'File Uploaded'), ('file_downloaded', 'File Downloaded'), ('ai_generation_started', 'AI Generation Started'), ('ai_generation_completed', 'AI Generation Completed'), ('export_created', 'Export Created'), ('export_downloaded', 'Export Downloaded'), ('settings_updated', 'Settings Updated')], max_length=50, verbose_name='Action')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional data about the activity', verbose_name='Metadata')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activity_logs', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Activity Log',
                'verbose_name_plural': 'User Activity Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='analytics_u_user_id_e2feae_idx'), models.Index(fields=['action', '-created_at'], name='analytics_u_action_a18517_idx'), models.Index(fields=['course', '-created_at'], name='analytics_u_course__728268_idx')],
            },
        ),
        migrations.CreateModel(
            name='UsageStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=20, verbose_name='Period Type')),
                ('date', models.DateField(verbose_name='Date')),
                ('files_uploaded_count', models.PositiveIntegerField(default=0, verbose_name='Files Uploaded')),
                ('total_upload_size', models.BigIntegerField(default=0, verbose_name='Total Upload Size (bytes)')),
                ('files_processed_count', models.PositiveIntegerField(default=0, verbose_name='Files Processed')),
                ('ai_generations_count', models.PositiveIntegerField(default=0, verbose_name='AI Generations')),
                ('quiz_generations_count', models.PositiveIntegerField(default=0, verbose_name='Quiz Generations')),
                ('exam_generations_count', models.PositiveIntegerField(default=0, verbose_name='Exam Generations')),
                ('syllabus_generations_count', models.PositiveIntegerField(default=0, verbose_name='Syllabus Generations')),
                ('total_tokens_used', models.PositiveIntegerField(default=0, verbose_name='Total Tokens Used')),
                ('avg_generation_time', models.FloatField(default=0.0, verbose_name='Average Generation Time (seconds)')),
                ('exports_created_count', models.PositiveIntegerField(default=0, verbose_name='Exports Created')),
                ('exports_downloaded_count', models.PositiveIntegerField(default=0, verbose_name='Exports Downloaded')),
                ('pdf_exports_count', models.PositiveIntegerField(default=0, verbose_name='PDF Exports')),
                ('docx_exports_count', models.PositiveIntegerField(default=0, verbose_name='DOCX Exports')),
                ('zip_exports_count', models.PositiveIntegerField(default=0, verbose_name='ZIP Exports')),
                ('login_count', models.PositiveIntegerField(default=0, verbose_name='Login Count')),
                ('total_session_time', models.PositiveIntegerField(default=0, verbose_name='Total Session Time (minutes)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usage Statistics',
                'verbose_name_plural': 'Usage Statistics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['user', 'period_type', '-date'], name='analytics_u_user_id_2b3d8d_idx'), models.Index(fields=['course', 'period_type', '-date'], name='analytics_u_course__1171a0_idx')],
                'unique_together': {('user', 'course', 'period_type', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ErrorLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_type', models.CharField(max_length=200, verbose_name='Error Type')),
                ('error_message', models.TextField(verbose_name='Error Message')),
                ('stack_trace', models.TextField(blank=True, null=True, verbose_name='Stack Trace')),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20, verbose_name='Severity')),
                ('url', models.URLField(blank=True, null=True, verbose_name='URL')),
                ('http_method', models.CharField(blank=True, max_length=10, null=True, verbose_name='HTTP Method')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('additional_data', models.JSONField(blank=True, default=dict, verbose_name='Additional Data')),
                ('is_resolved', models.BooleanField(default=False, verbose_name='Resolved')),
                ('resolution_notes', models.TextField(blank=True, null=True, verbose_name='Resolution Notes')),
                ('occurrence_count', models.PositiveIntegerField(default=1, verbose_name='Occurrence Count')),
                ('first_occurred', models.DateTimeField(auto_now_add=True)),
                ('last_occurred', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='error_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Error Log',
                'verbose_name_plural': 'Error Logs',
                'ordering': ['-last_occurred'],
                'indexes': [models.Index(fields=['severity', '-last_occurred'], name='analytics_e_severit_8b89dc_idx'), models.Index(fields=['is_resolved', '-last_occurred'], name='analytics_e_is_reso_f70077_idx'), models.Index(fields=['error_type', '-last_occurred'], name='analytics_e_error_t_fdfbd7_idx')],
            },
        ),
        migrations.CreateModel(
            name='APIUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(choices=[('gemini', 'Google Gemini'), ('huggingface', 'Hugging Face'), ('tesseract', 'Tesseract OCR'), ('langdetect', 'Language Detection')], max_length=50, verbose_name='Service')),
                ('endpoint', models.CharField(max_length=200, verbose_name='API Endpoint')),
                ('method', models.CharField(default='POST', max_length=10, verbose_name='HTTP Method')),
                ('request_size', models.PositiveIntegerField(default=0, verbose_name='Request Size (bytes)')),
                ('response_size', models.PositiveIntegerField(default=0, verbose_name='Response Size (bytes)')),
                ('tokens_consumed', models.PositiveIntegerField(default=0, verbose_name='Tokens Consumed')),
                ('response_time_ms', models.PositiveIntegerField(default=0, verbose_name='Response Time (ms)')),
                ('status_code', models.PositiveIntegerField(default=200, verbose_name='HTTP Status Code')),
                ('success', models.BooleanField(default=True, verbose_name='Success')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='Error Message')),
                ('cost_estimate', models.DecimalField(decimal_places=6, default=0.0, help_text='Estimated cost in USD', max_digits=10, verbose_name='Cost Estimate')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_usage_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'API Usage Log',
                'verbose_name_plural': 'API Usage Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='analytics_a_user_id_242b06_idx'), models.Index(fields=['service', '-created_at'], name='analytics_a_service_65c1c8_idx'), models.Index(fields=['success', '-created_at'], name='analytics_a_success_d51ef3_idx')],
            },
        ),
    ]
