# Generated by Django 4.2.24 on 2025-09-23 16:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GlobalSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_ai_model', models.CharField(default='gemini-pro', max_length=50, verbose_name='Default AI Model')),
                ('max_tokens_per_request', models.PositiveIntegerField(default=4000, verbose_name='Max Tokens per Request')),
                ('ai_timeout_seconds', models.PositiveIntegerField(default=120, verbose_name='AI Timeout (seconds)')),
                ('max_file_size_mb', models.PositiveIntegerField(default=50, verbose_name='Max File Size (MB)')),
                ('allowed_file_extensions', models.JSONField(default=list, help_text='List of allowed file extensions', verbose_name='Allowed File Extensions')),
                ('export_retention_days', models.PositiveIntegerField(default=30, help_text='Number of days to keep exported files', verbose_name='Export Retention Days')),
                ('watermark_text', models.CharField(blank=True, max_length=200, null=True, verbose_name='Default Watermark')),
                ('max_generations_per_day', models.PositiveIntegerField(default=100, verbose_name='Max Generations per Day')),
                ('max_exports_per_day', models.PositiveIntegerField(default=50, verbose_name='Max Exports per Day')),
                ('maintenance_mode', models.BooleanField(default=False, verbose_name='Maintenance Mode')),
                ('maintenance_message', models.TextField(blank=True, null=True, verbose_name='Maintenance Message')),
                ('enable_ai_generation', models.BooleanField(default=True, verbose_name='Enable AI Generation')),
                ('enable_file_sharing', models.BooleanField(default=True, verbose_name='Enable File Sharing')),
                ('enable_analytics', models.BooleanField(default=True, verbose_name='Enable Analytics')),
                ('enable_export_versioning', models.BooleanField(default=True, verbose_name='Enable Export Versioning')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Global Settings',
                'verbose_name_plural': 'Global Settings',
            },
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(choices=[('light', 'Light'), ('dark', 'Dark'), ('auto', 'Auto')], default='light', max_length=10, verbose_name='Theme')),
                ('sidebar_collapsed', models.BooleanField(default=False, verbose_name='Sidebar Collapsed')),
                ('items_per_page', models.PositiveIntegerField(default=20, validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(100)], verbose_name='Items per Page')),
                ('email_notifications', models.BooleanField(default=True, verbose_name='Email Notifications')),
                ('notification_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest'), ('never', 'Never')], default='immediate', max_length=20, verbose_name='Notification Frequency')),
                ('default_quiz_questions', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Default Quiz Questions')),
                ('default_exam_versions', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Default Exam Versions')),
                ('preferred_export_format', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word'), ('html', 'HTML')], default='pdf', max_length=10, verbose_name='Preferred Export Format')),
                ('allow_analytics', models.BooleanField(default=True, verbose_name='Allow Analytics')),
                ('allow_usage_tracking', models.BooleanField(default=True, verbose_name='Allow Usage Tracking')),
                ('custom_settings', models.JSONField(blank=True, default=dict, verbose_name='Custom Settings')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Preference',
                'verbose_name_plural': 'User Preferences',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('color', models.CharField(default='#6B7280', help_text='Hex color code for the tag', max_length=7, verbose_name='Color')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_system_tag', models.BooleanField(default=False, help_text='System tags are available to all users', verbose_name='System Tag')),
                ('usage_count', models.PositiveIntegerField(default=0, verbose_name='Usage Count')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SystemAnnouncement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('content', models.TextField(verbose_name='Content')),
                ('announcement_type', models.CharField(choices=[('maintenance', 'Maintenance'), ('feature', 'New Feature'), ('update', 'System Update'), ('warning', 'Warning'), ('info', 'Information')], default='info', max_length=20, verbose_name='Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('is_dismissible', models.BooleanField(default=True, verbose_name='Dismissible')),
                ('target_roles', models.JSONField(blank=True, default=list, help_text='Roles that should see this announcement. Empty for all users.', verbose_name='Target Roles')),
                ('display_from', models.DateTimeField(verbose_name='Display From')),
                ('display_until', models.DateTimeField(blank=True, null=True, verbose_name='Display Until')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='announcements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Announcement',
                'verbose_name_plural': 'System Announcements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ContentTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(max_length=50)),
                ('object_id', models.PositiveIntegerField()),
                ('language', models.CharField(max_length=10)),
                ('translations', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='core_conten_content_a440a9_idx'), models.Index(fields=['language'], name='core_conten_languag_9d3bf7_idx')],
                'unique_together': {('content_type', 'object_id', 'language')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('message', models.TextField(verbose_name='Message')),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('success', 'Success'), ('warning', 'Warning'), ('error', 'Error'), ('system', 'System')], default='info', max_length=20, verbose_name='Type')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', max_length=20, verbose_name='Priority')),
                ('is_read', models.BooleanField(default=False, verbose_name='Read')),
                ('is_dismissed', models.BooleanField(default=False, verbose_name='Dismissed')),
                ('action_url', models.URLField(blank=True, help_text='URL to redirect when notification is clicked', null=True, verbose_name='Action URL')),
                ('action_label', models.CharField(blank=True, max_length=50, null=True, verbose_name='Action Label')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Metadata')),
                ('expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expires At')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Read At')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['recipient', '-created_at'], name='core_notifi_recipie_4d7e73_idx'), models.Index(fields=['is_read', '-created_at'], name='core_notifi_is_read_57d3f5_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('export', 'Export'), ('share', 'Share'), ('download', 'Download')], max_length=20, verbose_name='Action')),
                ('model_name', models.CharField(max_length=100, verbose_name='Model Name')),
                ('object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Object ID')),
                ('object_repr', models.CharField(blank=True, max_length=200, null=True, verbose_name='Object Representation')),
                ('changes', models.JSONField(blank=True, default=dict, help_text='Record of what was changed', verbose_name='Changes')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Log',
                'verbose_name_plural': 'Audit Logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='core_auditl_user_id_2a1528_idx'), models.Index(fields=['model_name', '-timestamp'], name='core_auditl_model_n_9470ca_idx'), models.Index(fields=['action', '-timestamp'], name='core_auditl_action_f07419_idx')],
            },
        ),
    ]
